version: '3.8'

services:
  # NestJS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: location-logging-app
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/location_logging
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      - postgres
      - redis
    networks:
      - location-logging-network
    restart: unless-stopped

  # PostgreSQL with PostGIS
  postgres:
    image: postgis/postgis:15-3.3
    container_name: location-logging-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: location_logging
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - location-logging-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: location-logging-redis
    volumes:
      - redis_data:/data
    networks:
      - location-logging-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: location-logging-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - location-logging-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  location-logging-network:
    driver: bridge 